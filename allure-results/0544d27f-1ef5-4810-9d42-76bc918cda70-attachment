# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Downloading SVG files
- Location: C:\Users\likhithap\WebstormProjects\PlaywrightAutomation\tests\DownloadingFiles\DownloadFiles.spec.js:17:1

# Error details

```
Error: page.waitForEvent: Target page, context or browser has been closed
=========================== logs ===========================
waiting for event "download"
============================================================
    at C:\Users\likhithap\WebstormProjects\PlaywrightAutomation\tests\DownloadingFiles\DownloadFiles.spec.js:37:30
```

# Test source

```ts
   1 | import { test, expect } from '@playwright/test';
   2 |
   3 | test('Downloading files', async ({ page }) => {
   4 |   await page.goto('https://commitquality.com/practice-file-download');
   5 |
   6 |   let waitForDownloadEvent = page.waitForEvent('download')
   7 |
   8 |   await page.locator("//button[normalize-space()='Download File']").click();
   9 |   await page.waitForTimeout(2000)
  10 |   const download = await waitForDownloadEvent;
  11 |
  12 |   await download.saveAs("./"+download.suggestedFilename());
  13 |
  14 | });
  15 |
  16 |
  17 | test("Downloading SVG files", async ({ page }) => {
  18 |   await page.goto('https://file-examples.com/#google_vignette');
  19 |   await page.setViewportSize({ width: 1920, height: 1040 });
  20 |
  21 |   await page.locator("//h3[normalize-space()='Other files']").scrollIntoViewIfNeeded();
  22 |
  23 |   const files = await page.locator("h3");
  24 |   const browseButtons = await page.locator("//a[normalize-space()='Browse']");
  25 |
  26 |   console.log("Total files:", await files.count());
  27 |
  28 |   for (let i = 0; i < await files.count(); i++) {
  29 |     const fileName = await files.nth(i).textContent();
  30 |     if (fileName?.includes("Images")) {
  31 |       await browseButtons.nth(i).click();
  32 |       await page.waitForLoadState("domcontentloaded");
  33 |       break; // Stop after clicking the right "Browse" button
  34 |     }
  35 |   }
  36 |
> 37 |   let waitForDownload = page.waitForEvent("download");
     |                              ^ Error: page.waitForEvent: Target page, context or browser has been closed
  38 |
  39 |   const downloads = await page.locator(".file-ext");
  40 |   const downloadButtons = await page.locator("//a[normalize-space()='Select file size & download']");
  41 |
  42 |   for (let i = 0; i < await downloads.count(); i++) {
  43 |     const downloadingText = await downloads.nth(i).textContent();
  44 |     if (downloadingText?.includes("SVG")) {
  45 |       await downloadButtons.nth(i).click();
  46 |       break; // Stop after selecting the SVG download
  47 |     }
  48 |   }
  49 |
  50 |   const download = await waitForDownload;
  51 |   await download.saveAs(`./DownloadedFiles/`+ download.suggestedFilename());
  52 | });
  53 |
```