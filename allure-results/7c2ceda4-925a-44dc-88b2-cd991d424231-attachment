# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Downloading Images
- Location: C:\Users\likhithap\WebstormProjects\PlaywrightAutomation\tests\DownloadingFiles\DownloadFiles.spec.js:16:1

# Error details

```
Error: page.waitForEvent: Test ended.
=========================== logs ===========================
waiting for event "download"
============================================================
    at C:\Users\likhithap\WebstormProjects\PlaywrightAutomation\tests\DownloadingFiles\DownloadFiles.spec.js:41:10
```

# Test source

```ts
   1 | import { test, expect } from '@playwright/test';
   2 |
   3 | test('Downloading files', async ({ page }) => {
   4 |   await page.goto('https://commitquality.com/practice-file-download');
   5 |
   6 |   let waitForDownloadEvent = page.waitForEvent('download')
   7 |
   8 |   await page.locator("//button[normalize-space()='Download File']").click();
   9 |   await page.waitForTimeout(2000)
  10 |   const download = await waitForDownloadEvent;
  11 |
  12 |   await download.saveAs("./"+download.suggestedFilename());
  13 |
  14 | });
  15 |
  16 | test("Downloading Images", async ({ page }) => {
  17 |   await page.goto('https://file-examples.com/#google_vignette');
  18 |   await page.setViewportSize({ width: 1920, height: 1040 });
  19 |
  20 |   const sections = await page.locator("div.feature-item").all();
  21 |
  22 |   console.log("Total sections:", sections.length);
  23 |
  24 |   for (const section of sections) {
  25 |     const fileTitle = await section.locator("h3").textContent();
  26 |
  27 |     if (fileTitle?.includes("Images")) {
  28 |       await section.locator("a:has-text('Browse')").click();
  29 |       break;
  30 |     }
  31 |   }
  32 |
  33 |   // Ensure the new page loads
  34 |   await page.waitForSelector("table");
  35 |
  36 |   // **✅ FIXED: Use XPath separately using page.locator()**
  37 |   const downloadButton = page.locator("//td[contains(., 'JPG')]/following-sibling::td/button");
  38 |
  39 |   // **✅ Use Promise.all to wait for download**
  40 |   const [download] = await Promise.all([
> 41 |     page.waitForEvent("download"), // Waits for the download event
     |          ^ Error: page.waitForEvent: Test ended.
  42 |     downloadButton.click() // Clicks the button to start download
  43 |   ]);
  44 |
  45 |   // **✅ Save file with correct path**
  46 |   await download.saveAs("./DownloadedFiles/" + download.suggestedFilename());
  47 |
  48 |   console.log("File downloaded:", download.suggestedFilename());
  49 | });
  50 |
  51 |
```